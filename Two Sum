using namespace std;
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) 
    {
        vector<int> result;
        
        //O(n^2)
        /*
        for(int i=0;i<nums.size()-1;i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                if(nums[i]+nums[j]==target)
                {
                    result.push_back(i);
                    result.push_back(j);
                }
            }
        }*/
        
        //O(N)
        map<int,int> complement ;
        for(int i=0;i<nums.size();i++)
        {
            complement.insert(pair<int,int>(target-nums[i],i));
        }
        map<int,int>::iterator it;
        for(int i=0;i<nums.size();i++)
        {
            it = complement.find(nums[i]);
            if(it!=complement.end() && i!= it->second)
            {
                result.push_back(i);
                result.push_back(it->second);
                break;
            }
        }                    
        return result;
        
    }
};
