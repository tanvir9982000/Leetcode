class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) 
    {
        unordered_set<char> s;
        unordered_set<char>::iterator it;
        
        //check every row
        for(int i=0;i<9;i++)
        {
            s.clear();
            for(int j=0;j<9;j++)
            {
                if(board[i][j]=='.') continue;
                it=s.find(board[i][j]);
                if(it==s.end())     
                    s.insert(board[i][j]);
                else                
                {
                    return false;   
                }
            }
        }
        
        //check every column
        for(int i=0;i<9;i++)
        {
            s.clear();
            for(int j=0;j<9;j++)
            {
                if(board[j][i] =='.') continue;
                it=s.find(board[j][i]);
                if(it==s.end())     
                    s.insert(board[j][i]);
                else                
                {
                    return false;   
                }
            }
        }
        //check every 3x3 sub-box
        int k,l;
        for( k=0;k<3;k++)
        {
            for( l=0;l<3;l++)    
            {
                s.clear();
                for(int i=0;i<3;i++)
                {
                    for(int j=0;j<3;j++)
                    {
                        cout<<board[k*3+i][l*3+j]<<" ";
                        if(board[k*3+i][l*3+j]=='.') continue;
                        it = s.find(board[k*3+i][l*3+j]);
                        if(it == s.end())     
                            s.insert(board[k*3+i][l*3+j]);
                        else                
                        {
                            return false;   
                        }
                    }
                }
            }
        }
        return true;
            
    }
};
